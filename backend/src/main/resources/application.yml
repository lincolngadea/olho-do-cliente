#spring:
#  datasource:
#    url: jdbc:postgresql://localhost:5432/olho_do_cliente
#    username: postgres
#    password: postgres
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true

spring:
  datasource:
    url: jdbc:h2:mem:devdb;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub
server:
  port: 8080

# Opcional: URL base para redirecionamento no login
# substitua pelo seu dom√≠nio real
app:
  base-url: https://app.aponteaqui.com